@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IAuthorizationService _authorization
@using System.Security.Principal
@using System.Security.Claims
@inject NavigationManager Navigation
@inject IJSRuntime JS

@inject IdentityAuthenticationStateProvider authStateProvider

<AuthorizeView>
    <Authorized>

        <Dropdown RightAligned="true" Style="margin-left:10px">
            <DropdownToggle Color="Color.Primary">
                 Hello, @PreferredUsername !
            </DropdownToggle>
            <DropdownMenu>
                @*<DropdownItem Clicked="@ToggleSidebar">Account</DropdownItem>
                    <DropdownDivider />*@
                <DropdownItem Clicked="@GoToSignOut">Log out</DropdownItem>
            </DropdownMenu>
        </Dropdown>
        @*<a href="AzureAD/Account/SignOut">Log out</a>*@

    </Authorized>
</AuthorizeView>
@code
{
    private string PreferredUsername;
    
    private bool IsAdmin { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {


          var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        

        if (user.Identity.IsAuthenticated)
        {
            var identity = user.Identity as ClaimsIdentity;
            PreferredUsername = identity.Claims.FirstOrDefault(c => c.Type == "FirstName")?.Value;
        }
        

       

    }

  
    async Task GoToSignOut()
    {

        await authStateProvider.Logout();
        Navigation.NavigateTo("/login");
    }
 
}